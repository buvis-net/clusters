---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tdarr
  namespace: media
spec:
  dependsOn:
  - name: ingress-nginx
    namespace: kube-tools
  - name: cert-manager
    namespace: kube-tools
  - name: authentik
    namespace: security
  - name: openebs
    namespace: storage
  interval: 5m
  install:
    timeout: 15m
    remediation:
      retries: 5
  upgrade:
    timeout: 15m
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: haveagitgat/tdarr
      tag: 2.14.02@sha256:0324970c6019e6c64e6393f483c4b9131700710a903dea741f71e3104220ec72
      pullPolicy: IfNotPresent
    additionalContainers:
      node:
        name: node
        image: haveagitgat/tdarr_node:2.14.01@sha256:505e49a2a81c98bfc1d10fe3de1bea7d2a8f63957e2ad582a3b68440b6e8f606
        imagePullPolicy: IfNotPresent
        env:
        - name: nodeID
          value: node
        - name: serverIP
          value: localhost
        - name: serverPort
          value: 8266
        volumeMounts:
        - name: config
          mountPath: /app/configs
        - name: media
          mountPath: /media
        - name: shared
          mountPath: /shared
    persistence:
      config:
        enabled: true
        existingClaim: tdarr-config
        mountPath: /app/configs
      data:
        enabled: true
        existingClaim: tdarr-data
        mountPath: /app/server
      media:
        enabled: true
        existingClaim: nas-media
        mountPath: /media
      shared:
        enabled: true
        type: pvc
        existingClaim: tdarr-cache
        mountPath: /shared
    service:
      main:
        ports:
          http:
            port: 8265
          server:
            enabled: true
            protocol: TCP
            port: 8266
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: letsencrypt-production
          authentik.home.arpa/enabled: "true"
        hosts:
        - host: tdarr.buvis.net
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - tdarr.buvis.net
          secretName: tdarr-crt
    podSecurityContext:
      fsGroup: 1000
      fsGroupChangePolicy: "OnRootMismatch"
