---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: kopia-maintenance
  namespace: storage
spec:
  schedule: "0 6 */3 * *"
  suspend: false
  concurrencyPolicy: "Forbid"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 2
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 259200
      template:
        spec:
          automountServiceAccountToken: false
          restartPolicy: OnFailure
          initContainers:
          - name: wait-for-repo
            image: docker.io/kopia/kopia:20240412.0.225911@sha256:e2b4780bab171b0acf7f21a0a27bc5998390c11d18c3a7ea005d674ca071e2d4
            command:
            - /bin/bash
            - -c
            - |-
              until [ -f /snapshots/kopia.repository.f ]; do
                  printf "\e[1;32m%-6s\e[m\n" "Awaiting for the Kopia repo to become ready ..."
                  sleep 1
              done
            volumeMounts:
            - name: snapshots
              mountPath: /snapshots
          containers:
          - name: maintenance
            image: docker.io/kopia/kopia:20240412.0.225911@sha256:e2b4780bab171b0acf7f21a0a27bc5998390c11d18c3a7ea005d674ca071e2d4
            env:
            - name: TZ
              value: ${TIMEZONE}
            - name: KOPIA_CACHE_DIRECTORY
              value: /snapshots/cache
            - name: KOPIA_LOG_DIR
              value: /snapshots/logs
            - name: KOPIA_PASSWORD
              value: "none"
            command:
            - /bin/bash
            - -c
            - |
              printf "\e[1;32m%-6s\e[m\n" "[01/04] Connect to repo ..."       && kopia repo connect filesystem --path=/snapshots --override-hostname=cluster --override-username=root
              printf "\e[1;32m%-6s\e[m\n" "[02/04] Set maintenance owner ..." && kopia maintenance set --owner=root@cluster
              printf "\e[1;32m%-6s\e[m\n" "[03/04] Run maintenance ..."       && kopia maintenance run --full
              printf "\e[1;32m%-6s\e[m\n" "[04/04] Disconnect from repo ..."  && kopia repo disconnect
            volumeMounts:
            - name: snapshots
              mountPath: /snapshots
            securityContext:
              privileged: true
          volumes:
          - name: snapshots
            nfs:
              server: ${NFS_SERVER_IP}
              path: ${NFS_SERVER_PATH_PV}/storage/kopia/snapshots
