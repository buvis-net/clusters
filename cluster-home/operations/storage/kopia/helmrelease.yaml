---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kopia-ui
  namespace: storage
spec:
  interval: 5m
  install:
    timeout: 15m
    remediation:
      retries: 5
  upgrade:
    timeout: 15m
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 1.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    initContainers:
      wait-for-repo:
        image: ghcr.io/onedr0p/kopia:0.12.1@sha256:b4f2b49fbb0477afa575e5e806ab21b6ab008ae18e0be3915072acea46c6712a
        command:
        - /bin/bash
        - -c
        - |-
          until [ -f /snapshots/kopia.repository.f ]; do
              printf "\e[1;32m%-6s\e[m\n" "Waiting for the Kopia repo to become ready ..."
              sleep 1
          done
        volumeMounts:
        - name: snapshots
          mountPath: /snapshots
    image:
      repository: ghcr.io/onedr0p/kopia
      tag: 0.12.1@sha256:b4f2b49fbb0477afa575e5e806ab21b6ab008ae18e0be3915072acea46c6712a
    env:
      TZ: "${TIMEZONE}"
      KOPIA_PASSWORD: "none"
    command: kopia
    args:
    - server
    - --insecure
    - --address
    - 0.0.0.0:80
    - --metrics-listen-addr
    - 0.0.0.0:8080
    - --without-password
    - --log-level
    - debug
    service:
      main:
        enabled: true
        type: LoadBalancer
        externalIPs:
        - ${SVC_IP_KOPIA}
        externalTrafficPolicy: Local
        ports:
          http:
            port: 80
          metrics:
            enabled: true
            port: 8080
    podSecurityContext:
      supplementalGroups:
      - 100
    persistence:
      config:
        enabled: true
        type: configMap
        name: kopia-ui-config
        subPath: repository.config
        mountPath: /config/repository.config
        readOnly: true
      snapshots:
        enabled: true
        type: nfs
        server: ${NFS_SERVER_IP}
        path: ${NFS_SERVER_PATH_KOPIA}/snapshots
        mountPath: /snapshots
