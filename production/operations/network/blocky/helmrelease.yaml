---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: blocky
  namespace: network
spec:
  interval: 5m
  install:
    timeout: 15m
    remediation:
      retries: 5
  upgrade:
    timeout: 15m
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: blocky
      version: 10.3.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
      interval: 5m
  values:
    controller:
      replicas: 3
    env:
      TZ: "Europe/Berlin"
    service:
      main:
        ports:
          http:
            port: 4000
      dns-tcp:
        enabled: true
        type: LoadBalancer
        externalIPs:
        - ${SVC_IP_BLOCKY}
        externalTrafficPolicy: Local
        ports:
          dns-tcp:
            enabled: true
            port: 53
            protocol: TCP
            targetPort: 53
      dns-udp:
        enabled: true
        type: LoadBalancer
        externalIPs:
        - ${SVC_IP_BLOCKY}
        externalTrafficPolicy: Local
        ports:
          dns-udp:
            enabled: true
            port: 53
            protocol: UDP
            targetPort: 53
    prometheus:
      serviceMonitor:
        enabled: true
    probes:
      liveness:
        failureThreshold: 5
        periodSeconds: 10
      readiness:
        failureThreshold: 5
        periodSeconds: 10
      startup:
        initialDelaySeconds: 5
        failureThreshold: 30
        periodSeconds: 10
    metrics:
      enabled: true
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - blocky
            topologyKey: kubernetes.io/hostname
    config: |
      upstream:
        externalResolvers:
          - udp:${GATEWAY_IP}
      blocking:
        blackLists:
          ads:
          - https://raw.githubusercontent.com/buvis-net/clusters/main/production/operations/network/blocky/blacklist.txt
          - https://dbl.oisd.nl/
          #- http://sysctl.org/cameleon/hosts
          #- https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
          #- https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
          #- https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt
          #- https://raw.githubusercontent.com/hl2guide/Filterlist-for-AdGuard/master/Blocklist/filter_blocklist1.txt
          #- https://raw.githubusercontent.com/hl2guide/Filterlist-for-AdGuard/master/Blocklist/filter_blocklist2.txt
          #- https://raw.githubusercontent.com/hl2guide/Filterlist-for-AdGuard/master/Blocklist/filter_blocklist3.txt
          #- https://raw.githubusercontent.com/hl2guide/Filterlist-for-AdGuard/master/Blocklist/filter_blocklist4.txt
          #- https://raw.githubusercontent.com/kodlz/pihole_easylist/main/adblock_list/adblock.hosts
          #- https://raw.githubusercontent.com/herrbischoff/trackers/master/trackers.txt
          #- https://raw.githubusercontent.com/herrbischoff/trackers/master/domains.txt
          #- https://raw.githubusercontent.com/ftpmorph/ftprivacy/master/blocklists/smartphone-ads-tracking.txt
          #- https://codeberg.org/spootle/blocklist/raw/branch/master/blocklist.txt
          #- https://raw.githubusercontent.com/mkb2091/blockconvert/master/output/domains.txt
        whiteLists:
          ads:
          - https://raw.githubusercontent.com/anudeepND/whitelist/master/domains/whitelist.txt
          - https://raw.githubusercontent.com/hl2guide/Filterlist-for-AdGuard/master/filter_whitelist.txt
          - https://raw.githubusercontent.com/buvis-net/clusters/main/production/operations/network/blocky/whitelist.txt
        clientGroupsBlock:
          default:
          - ads
      conditional:
        mapping:
          buvis.net: udp:${GATEWAY_IP}
      clientLookup:
        upstream: udp:${GATEWAY_IP}
      prometheus:
        enable: true
        path: /metrics
      httpPort: 4000
      logLevel: info
